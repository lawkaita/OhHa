Määritellään aluksi ainakin suurpiirteinen muoto, jossa nämä tiedot tallennetaan, sillä tätä tietoa voin käyttää valmiissa projektissani. 

Tässä yhteydessä teen kokoajan samaa asiaa eli suunnittelen OhHa:n ohjelmaa. Tämä työ jakautuu kuitenkin eri kohteisiin. OhHaa ei pitäisi tässä erikseen jokaiselle tapahtumalle merkitä.

Käytetään siis tässä vaikka seuraavaa merkintää:

	pvm: klo1-klo2
	työn kohde

missä klo1 on aloitusaika ja klo2 lopetusaika. Vaihtoehtoisesti klo1-klo2:n sijaan merkitsen välillä vain käytetyn ajan.

Työn kohteen kuvailustakin on hyvä sanoa ensiksi jotakin jotta kuvauksia syntyy helpommin ja jotta tätä on mukavampi lukea. Olkoon siis niin että kuvauksessa on ainakin ja lähinnä verbi ja objekti.

***

Tuntikirjanpito:

28.10.13 3h
Kurssin aloitus ja ensimmäiset säädöt.

30.10.13 11.00-12.00
Projektin repon siivous ja projektin aiheen lukkoonlyöminen.

30.10.13: 16.15-17.15
Projektin GitHub-sivulla näkyvän README.md:n kanssa säheltäminen ja tämän dokumentin luominen.

1.11.13: 15.30-15.50
Lisätty pohdintaa aiheenKuvausJaRakenne.txt:hen.

3.11.13: 13.00-24.00
Hahmoteltu ohjelman rakennetta Netbeanssissa ja luotu oma konsoli käyttöliittymäksi.

4.11.13: 12.00-18.00
Tapeltu käyttöliittymän konsolin ulkonäön kanssa.

5.11.13: 11.00-13.00
Tapelty yhä konsolin ulkonäön kanssa sekä löyty aihe lopulta lukkoon.

6.11.13: 11.00-13.45
Ratkaistu konsolin ulkonäkö, jäsennelty ohjelman luokkia ja luotu toiminnallisuutta.

6.11.13: 16.00-18.43
Lisätty ohjelman varsinaista toiminnallisuutta ja kirjoitettu yksi testi.

6.11.13: 22.30-24.00
Lisätty testejä.

7.11.13: 18.00-19.41
Kirjoitettu testejä loppuun, nyt on yhteensä 10 testiä.
Kommentti: Koko koodista taitaa näkyä, että tein käyttöliittymän ensin: Käyttöliittymä on (melkein) valmis ja tuntuu määräävän kaiken muun toteuttamisessa hyvin monta asiaa. En osannut kirjoittaa testejä ihan test-driven developement -tyyliin, mutta niiden kirjoittaminen silti auttoi löytämään bugeja ja selkiyttämään ajatusta siitä, mitä ohjelmalta haluan. Tietokantaoperaatioista tuli testien avulla lisäksi vastaan monta avointa kysymystä - kuten missä muodossa tieto tallennetaan. Tavoitteena olisi että tiedostoa voisi lukea myös suoraan. Yhden päivän merkintä voisi näyttää tältä (monen eri kyseistä päivää koskevan merkinnän jälkeen):

	!5.10.2010
		&16.00-17.30 %Söin ison pitsan
		&18.00-17.30 %Katsoin netistä AVGN-jakson.

Tässä '!' olisi päiväyksen prefix, '&' kellonajan ja '%' selostuksen. Ilmeisestikin ohjelman tulisi tarkistaa, että aloituskellonaika on pienempi kuin lopetuskellonaika. Ohjelma voisi tukea myös "pistemäisiä" tapahtumia, eli tapahtumia, joihin liittyisi vain yksi kellonaika.

7.11.13: 19.41-21.38
Luotu UML-kaavio.

9.11.13: 13.00-16.33
Lisätty ja jäsennelty koodia. Luotu uusi UML-kaavio.

13.11.13 1.30-4.37
Lisätty koodia ja mietitty ohjelman toiminnallisuutta.

13.11.13 11.30-13.06
lisätty testejä ja selkiytetty ohjelman rakennetta sekä järjestelty uudelleen luokkia paketteihin.

13.11.13 13.06-13.41
hienosäätöä.

14.11.13 8.30-9.43
jäsennelty ohjelmaa. Huomattu, että jos tiedostoonkirjoitusoperaatioissa ei käytetä "\r\n" vaan "\n", tekstitiedostossa tieto voi jäädä yhdelle riville.
			
14.11.13 9.43-11.25
jäsennelty lisää ohjelmaa. Nyt koko ohjelmaa testaavat testit eivät toimi vaikka ohjelma toimii ainakin jotenkin.

15.11.13 15.30-18.15
Luotu tallennusformaattia.	

16.11.13 19.00-23.00
Muokattu hakutoiminnallisuutta ja testejä.

17.11.13 11.00-12.00
Muokattu hakutoiminnallisuutta ja testejä lisää.

17.11.13 13.00-13.30
Muokattu hakutoiminnallisuutta ja testejä.

17.11.13 14.00-15.00
luotu uusi UML -kaavio.

17.11.13 17.00-19.54
Luotu tietokantatoimintoja ja kirjoitettu testejä.

18.11.13 11.00-12.00
Luotu poistotoiminnallisuutta. Nyt ohjelma kaatuu jos tietokannassa on yksi ohjelman kautta syötetty merkintä, ja syötetään ohjelman kautta toinen merkintä.

18.11.13 12.00-15.00
Korjattu ongelma, lisätty toiminnallisuutta päällekkäisen tiedon tallettamiseen

18.11.13 15.15-17.00
Hienosäädetty testejä, tulostusta ja tallennusta.

19.11.13 10.00-11.30
Lisätty Javadoc ohjelman luokkiin.

21.11.13 17.00-22.35
Jäsennetty koodia, luotu sekvenssikaavioita, luotu uusi UML-kaavio.

22.11.13 13.30-15.41
Jäsennetty koodia, kirjoitettu lisää testejä.

24.11.13 16.00-18.00
Kirjoitettu javadokkeja, putsattu koodia.

24.11.13 18.00-20.10
Luotu lisää toiminnallisuutta.

25.11.13 13.00-17.34
Jäsennelty koodia ja testejä.

25.11.13 17.50-18.43
Hienosäädetty testejä.

26.11.13 17.00-21.17
Jäsennetty koodia: luotu rajapintoja eri luokille.

27.11.13 18.30-20.38
Kirjoitettu testejä.

27.11.13 20.38-21.18
Päivitetty ja luotu sekvenssikaavioita.

28.11.13 16.30-18.38
Päivitetty UML-kaaviota ja jäsennetty ja luotu testejä.

28.11.13 18.38-20.36
Luotu testejä, putsattu ja jäsennelty koodeja.

01.12.13 15.00-23.30
Luotu toiminnallisuutta.

11.12.13 22.00-23.11
Luotu toiminnallisuutta.

12.12.13 13.00-17.12
Luotu toiminnallisuutta ja ohjelman käyttäjälle näytettäviä viestejä.

12.12.13 18.00-20.32
Kirjoitettu ohjelman käyttäjälle näytettäviä viestejä ja refaktoroitu.

13.12.13 17.30-19.36
Kirjoitettu ohjelman käyttöohjetta.

13.12.13 20.00-21.15
Kirjoitettu ohjelman aihemäärittelystä ja rakenteesta.